@{
    Layout = "~/Views/Shared/_Index.cshtml";
 }
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment HostingEnvironment
@section header{
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/zTree/v3/css/metroStyle/metroStyle.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/zTree/v3/js/ztree.min.js"))

    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/jquery.layout/1.4.4/jquery.layout-latest.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/jquery.layout/1.4.4/jquery.layout-latest.min.js"))

    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/bootstrap.treetable/1.0/bootstrap-treetable.min.css"))
    @BundlerHelper.Render(HostingEnvironment.ContentRootPath, Url.Content("~/lib/bootstrap.treetable/1.0/bootstrap-treetable.min.js"))
}


<div class="ui-layout-west">
    <div class="main-content">
        <div class="box box-main">
            <div class="box-header">
                <div class="box-title">
                    产品模块分类
                </div>
                <div class="box-tools pull-right">
                    @* <a type="button" class="btn btn-box-tool menuItem" href="#" onclick="showDepartmentForm()" title="管理部门"><i class="fa fa-edit"></i></a>
                    <button type="button" class="btn btn-box-tool" id="btnExpand" title="展开" style="display:none;"><i class="fa fa-chevron-up"></i></button>
                    <button type="button" class="btn btn-box-tool" id="btnCollapse" title="折叠"><i class="fa fa-chevron-down"></i></button>*@
                    @*<button type="button" class="btn btn-box-tool" id="btnRefresh" title="刷新"><i class="fa fa-refresh"></i></button>*@
                </div>
            </div>
            <div class="ui-layout-content">
                <div id="productTree" class="ztree"></div>
            </div>
        </div>
    </div>
</div>


<div class="container-div ui-layout-center">
    <div class="row">
        <div id="searchDiv" class="col-sm-12 search-collapse">
            <input type="hidden" id="productId" col="ProductId">
            <input type="hidden" id="cateId" col="CateId">
            <div class="select-list">
                <ul>
                    <li>
                        编码：<input id="projectGuid" col="ProjectGuid" type="text" />
                    </li>
                    <li>
                        名称：<input id="name" col="Name" type="text" />
                    </li>
                    <li>
                        <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchGrid()"><i class="fa fa-search"></i>&nbsp;搜索</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="btn-group-sm hidden-xs" id="toolbar">
            @*<a id="btnAdd" class="btn btn-success" onclick="showSaveForm(true)"><i class="fa fa-plus"></i> 新增</a>
            <a id="btnEdit" class="btn btn-primary disabled" onclick="showSaveForm(false)"><i class="fa fa-edit"></i> 修改</a>*@
            <a id="btnEdit" class="btn btn-primary disabled" onclick="toggleEnableStatus()"><i class="fa fa-edit"></i> 切换状态</a>
            @*<a id="btnEdit" class="btn btn-primary disabled" onclick="disableForm(0)"><i class="fa fa-edit"></i> 禁用</a>*@
            <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> 删除</a>
        </div>
        <div class="col-sm-12 select-table table-striped">
            <table id="gridTable" data-mobile-responsive="true"></table>
        </div>
    </div>
</div>

<script type="text/javascript">
        $(function () {
            initProductTreeGrid();
            initGrid();
            $('body').layout({ west__size: 185 });
        });

        function initProductTreeGrid() {
            $('#productTree').ysTree({
                url: '@Url.Content("~/ProductCategoryManager/ModuleCategory/GetAllModuleCategoryTreeListJson")',
                async: true,
                expandLevel: 2,
                maxHeight: "700px",
                callback: {
                    onClick: function (event, treeId, treeNode) {
                        var parentNodeVal=treeNode;
                        var parentNode = treeNode;
                        while (parentNode != null) {
                          
                            parentNode = parentNode.getParentNode();
                            if (parentNode!=null)
                            {
                                parentNodeVal = parentNode;
                            }
                        }

                        //根节点为产品
                        $("#productId").val(parentNodeVal.id);
                        if(treeNode == parentNodeVal)
                        {
                            //如果当前选中的是产品根节点
                            $("#cateId").val(0);
                        }
                        else
                        {
                            $("#cateId").val(treeNode.id);
                        }

                        searchGrid();
                    }
                }
            });
        }

    function initGrid() {
        var queryUrl = '@Url.Content("~/ProjectManager/PublishedProject/GetPageListJson")';
        $('#gridTable').ysTable({
            url: queryUrl,
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                //{ field: 'TenantId', title: 'TenantId' },
                //{ field: 'ProductId', title: 'ProductId' },
                { field: 'ProjectGuid', title: '模板编码', width: '120px' },
              
                { field: 'Name', title: '模板名称' },
                { field: 'ReleaseNote', title: '说明' },
                { field: 'AssertionCount', title: '断言数', width: '40px' },
                {
                    field: 'SupportParallel', title: '可并行', width: '40px', formatter: function (value, row, index) {
                        if (row.SupportParallel == "@IsEnum.Yes.ParseToInt()") {
                            return '' + "@IsEnum.Yes.GetDescription()" + '';
                        } else {
                            return '' + "@IsEnum.No.GetDescription()" + '';
                        }
                    }
                },
             
                { field: 'Version', title: '版本号', width: '100px' },
                
                {
                    field: 'ReleaseDate', title: '发版时间', width: '135px', formatter: function (value, row, index) {
                        return ys.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                    }
                },
                {
                    field: 'IsEnable', title: '状态', width: '40px', formatter: function (value, row, index) {
                        if (row.IsEnable == "@StatusEnum.Yes.ParseToInt()") {
                            return '<span class="badge badge-primary">' + "@StatusEnum.Yes.GetDescription()" + '</span>';
                        } else {
                            return '<span class="badge badge-warning">' + "@StatusEnum.No.GetDescription()" + '</span>';
                        }
                    }
                },
                { field: 'CreatorUserName', title: '创建人', width: '40px', visible: false },
                {
                    title: '操作',
                    align: 'center',
                    width: '40px',
                    formatter: function (value, row, index) {
                        var actions = [];
                        actions.push('<a class="btn btn-primary btn-xs" href="#" onclick="openVarConfigDialog(\'' + row.Id + '\')" ><i class="fa fa-pause-circle-o"></i>变量</a> ');
                        //if (row.JobStatus == "@StatusEnum.Yes.ParseToInt()") {
                        //    actions.push('<a class="btn btn-primary btn-xs" href="#" onclick="ChangeJobStatus(\'' + row.Id + '\',@StatusEnum.No.ParseToInt())"><i class="fa fa-pause-circle-o"></i>暂停</a> ');
                        //} else {
                        //    actions.push('<a class="btn btn-primary btn-xs" href="#" onclick="ChangeJobStatus(\'' + row.Id + '\',@StatusEnum.Yes.ParseToInt())"><i class="fa fa-play-circle-o"></i>执行</a> ');
                        //}
                        return actions.join('');
                    }
                }
                
            ],
            queryParams: function (params) {
                var pagination = $('#gridTable').ysTable('getPagination', params);
                var queryString = $('#searchDiv').getWebControls(pagination);
                return queryString;
            }
        });
    }

    function searchGrid() {
        $('#gridTable').ysTable('search');
        resetToolbarStatus();
    }

    function showSaveForm(bAdd) {
        var id = 0;
        if (!bAdd) {
            var selectedRow = $('#gridTable').bootstrapTable('getSelections');
            if (!ys.checkRowEdit(selectedRow)) {
                return;
            }
            else {
                id = selectedRow[0].Id;
            }
        }
        ys.openDialog({
            title: id > 0 ? '编辑' : '添加',
            content: '@Url.Content("~/ProjectManager/PublishedProject/PublishedProjectForm")' + '?id=' + id,
            width: '768px',
            height: '550px',
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }

    function deleteForm() {
        var selectedRow = $('#gridTable').bootstrapTable('getSelections');
        if (ys.checkRowDelete(selectedRow)) {
            ys.confirm('确认要删除选中的' + selectedRow.length + '条数据吗？', function () {
                var ids = ys.getIds(selectedRow);
                ys.ajax({
                    url: '@Url.Content("~/ProjectManager/PublishedProject/DeleteFormJson")' + '?ids=' + ids,
                    type: 'post',
                    success: function (obj) {
                        if (obj.Status) {
                            ys.msgSuccess(obj.Message);
                            searchGrid();
                        }
                        else {
                            ys.msgError(obj.Message);
                        }
                    }
                });
            });
        }
    }
        function toggleEnableStatus() {
            var selectedRow = $('#gridTable').bootstrapTable('getSelections');
            if (ys.checkRowDelete(selectedRow)) {
                ys.confirm('确认要启用/禁用选中的' + selectedRow.length + '条数据吗？', function () {
                    var ids = ys.getIds(selectedRow);
                    var currentIsEnable = selectedRow[0].IsEnable;

                    ys.ajax({
                    url: '@Url.Content("~/ProjectManager/PublishedProject/DisableFormJson")' + '?ids=' + ids + '&status=' + currentIsEnable,
                        type: 'post',
                        success: function (obj) {
                            if (obj.Status) {
                                ys.msgSuccess(obj.Message);
                                searchGrid();
                            }
                            else {
                                ys.msgError(obj.Message);
                            }
                        }
                    });
                });
            }
        }
        function openVarConfigDialog(id) {
            ys.openDialog({
                title: '编辑模板变量',
                content: '@Url.Content("~/ProjectManager/PublishedProject/ProjectVarConfigForm")' + '?projectId=' + id,
                width: '968px',
                height: '750px',
                callback: function (index, layero) {
                    var iframeWin = window[layero.find('iframe')[0]['name']];
                    iframeWin.saveForm(index);
                }
            });
        }
</script>
